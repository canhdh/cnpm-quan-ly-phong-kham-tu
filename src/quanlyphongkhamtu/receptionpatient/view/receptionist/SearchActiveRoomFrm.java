/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlyphongkhamtu.receptionpatient.view.receptionist;

import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import quanlyphongkhamtu.receptionpatient.dao.PaymentDAO;
import quanlyphongkhamtu.receptionpatient.dao.RoomDAO;
import quanlyphongkhamtu.receptionpatient.model.Patient;
import quanlyphongkhamtu.receptionpatient.model.Payment;
import quanlyphongkhamtu.receptionpatient.model.RegisteredRoom;
import quanlyphongkhamtu.receptionpatient.model.Room;
import quanlyphongkhamtu.receptionpatient.model.User;
import quanlyphongkhamtu.receptionpatient.utils.Constants;
import quanlyphongkhamtu.receptionpatient.view.user.ReceptionistHomeFrm;

/**
 *
 * @author Dang Huu Canh
 */
public class SearchActiveRoomFrm extends javax.swing.JFrame {

    private User user;
    private Patient patient;
    private List<Room> listRoom;
    
    /**
     * Creates new form SearchActiveRoomFrm
     */
    public SearchActiveRoomFrm(User user, Patient patient) {
        this.user = user;
        this.patient = patient;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnSearchActiveRoom = new javax.swing.JPanel();
        lblSearchActiveRoom = new javax.swing.JLabel();
        lblUserFullName = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtKey = new javax.swing.JTextField();
        lblKey = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListRoom = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tìm buông khám");
        setLocation(new java.awt.Point(100, 60));
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(1024, 640));
        setResizable(false);

        pnSearchActiveRoom.setPreferredSize(new java.awt.Dimension(1024, 600));

        lblSearchActiveRoom.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        lblSearchActiveRoom.setText("Tìm buồng khám đang hoạt động");

        lblUserFullName.setText("Name");
        lblUserFullName.setText(user.getName());

        lblUsername.setText("Username");
        lblUsername.setText(user.getUsername());

        txtKey.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtKey.setPreferredSize(new java.awt.Dimension(12, 36));
        txtKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKeyActionPerformed(evt);
            }
        });

        lblKey.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblKey.setText("Loại buồng:");

        btnSearch.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.setPreferredSize(new java.awt.Dimension(79, 36));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblListRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "Tên buồng", "Loại", "Mô tả", "Vị trí", "Trạng thái", "Giá tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListRoom.setRowHeight(36);
        tblListRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListRoom);

        btnBack.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.setPreferredSize(new java.awt.Dimension(73, 36));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnSearchActiveRoomLayout = new javax.swing.GroupLayout(pnSearchActiveRoom);
        pnSearchActiveRoom.setLayout(pnSearchActiveRoomLayout);
        pnSearchActiveRoomLayout.setHorizontalGroup(
            pnSearchActiveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSearchActiveRoomLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pnSearchActiveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(pnSearchActiveRoomLayout.createSequentialGroup()
                        .addComponent(lblKey)
                        .addGap(18, 18, 18)
                        .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnSearchActiveRoomLayout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSearchActiveRoom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnSearchActiveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserFullName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUsername, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(1, 1, 1)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        pnSearchActiveRoomLayout.setVerticalGroup(
            pnSearchActiveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSearchActiveRoomLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnSearchActiveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnSearchActiveRoomLayout.createSequentialGroup()
                        .addComponent(lblUserFullName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUsername))
                    .addGroup(pnSearchActiveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSearchActiveRoom)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(pnSearchActiveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKey)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnSearchActiveRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnSearchActiveRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKeyActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        JButton btnClickied = (JButton) evt.getSource();
        if (btnClickied.equals(btnSearch)) {
            if (txtKey.getText() == null || txtKey.getText().length() == 0) 
                return;
            RoomDAO roomDAO = new RoomDAO();
            listRoom = new ArrayList<>(roomDAO.searchRoom(txtKey.getText()));
            if (listRoom == null || listRoom.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy phòng khám nào đang hoạt động!",
                    "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } else {
                String[] columeNames = {"STT", "ID", "Tên buồng", "Loại", "Mô tả", "Vị trí", "Trạng thái", "Giá tiền"};
                String[][] values = new String[listRoom.size()][8];
                for (int i = 0; i < listRoom.size(); i++) {
                    values[i][0] = String.valueOf(i + 1);
                    values[i][1] = String.valueOf(listRoom.get(i).getId());
                    values[i][2] = listRoom.get(i).getName();
                    values[i][3] = listRoom.get(i).getType();
                    values[i][4] = listRoom.get(i).getDescription();
                    values[i][5] = listRoom.get(i).getLocation();
                    values[i][6] = String.valueOf(listRoom.get(i).getIsActive());
                    values[i][7] = String.valueOf(listRoom.get(i).getPrice() + "đ");
                }
                DefaultTableModel tableModel = new DefaultTableModel(values, columeNames) {
                    @Override
                    public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                };
                tblListRoom.setModel(tableModel);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblListRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListRoomMouseClicked
        // TODO add your handling code here:
        // get the colume of the button
        int colume = tblListRoom.getColumnModel().getColumnIndexAtX(evt.getX());
        // get the row of the button
        int row = evt.getY() / tblListRoom.getRowHeight();
        
        // check row and colume is valid or not
        if (row < tblListRoom.getRowCount() && row >= 0
                && colume < tblListRoom.getColumnCount() && colume >= 0) {
            Room selectedRoom = listRoom.get(row);
            int confirm = JOptionPane.showConfirmDialog(this, "Đăng ký buồng khám " + selectedRoom.getName()
                    + " cho bệnh nhân " + patient.getName() + "?", 
                    "Xác nhận", JOptionPane.OK_CANCEL_OPTION);
            
            RegisteredRoom registeredRoom = new RegisteredRoom();
            registeredRoom.setRoom(selectedRoom);
            registeredRoom.setRegisteredTime(Instant.now());
            registeredRoom.setUser(user);
            registeredRoom.setPatient(patient);
            registeredRoom.setTotal(selectedRoom.getPrice());
            
            Payment payment = new Payment();
            payment.setTotal(selectedRoom.getPrice());
            payment.setExportTime(Instant.now());
            payment.setType(Constants.PaymentType.REGISTERED_ROOM);
            payment.setRegisteredRooms(registeredRoom.asArrayList());
            payment.setPatient(patient);
            
            if (confirm == 0) {
                PaymentDAO paymentDAO = new PaymentDAO();
                if (!paymentDAO.addPayment(payment)) {
                    JOptionPane.showMessageDialog(this,
                            "Đăng ký không thành công! Vui lòng thử lại!",
                            "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this,
                            "Đăng ký thành công!",
                            "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                    (new ReceptionistHomeFrm(user)).setVisible(true);
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_tblListRoomMouseClicked

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        if ((evt.getSource() instanceof JButton) && (((JButton) evt.getSource()).equals(btnBack))) {
            (new SearchPatientFrm(user)).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblKey;
    private javax.swing.JLabel lblSearchActiveRoom;
    private javax.swing.JLabel lblUserFullName;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnSearchActiveRoom;
    private javax.swing.JTable tblListRoom;
    private javax.swing.JTextField txtKey;
    // End of variables declaration//GEN-END:variables
}
